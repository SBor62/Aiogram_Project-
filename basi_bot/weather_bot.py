import logging
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
import asyncio
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)  # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ logger

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
BOT_TOKEN = os.getenv('BOT_TOKEN')
OWM_API_KEY = os.getenv('OWM_API_KEY')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–æ–≤
if not BOT_TOKEN or not OWM_API_KEY:
    logger.error("–ù–µ —É–∫–∞–∑–∞–Ω—ã BOT_TOKEN –∏–ª–∏ OWM_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

dp = Dispatcher()


@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer(
        "<b>–ü—Ä–∏–≤–µ—Ç!</b> –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã.\n"
        "–û—Ç–ø—Ä–∞–≤—å /weather –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –≤ <i>–ú–æ—Å–∫–≤–µ</i>"
    )


@dp.message(Command("help"))
async def help_command(message: types.Message):
    await message.answer("–ö–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å\n/help - –ü–æ–º–æ—â—å\n/weather - –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ")


@dp.message(Command("weather"))
async def get_weather(message: types.Message):
    lat, lon = 55.7558, 37.6173  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ú–æ—Å–∫–≤—ã
    url = (f"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}"
           f"&appid={OWM_API_KEY}&units=metric&lang=ru")

    try:
        response = requests.get(url)
        data = response.json()
        if response.status_code == 200:
            weather_info = (
                f"üåÜ –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ:\n"
                f"‚òÅÔ∏è {data['weather'][0]['description'].capitalize()}\n"
                f"üå°Ô∏è {data['main']['temp']}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {data['main']['feels_like']}¬∞C)\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['main']['humidity']}%"
            )
        else:
            weather_info = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã: {e}")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º logger –≤–º–µ—Å—Ç–æ print
        weather_info = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ."

    await message.answer(weather_info)


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
